<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 声明：注册Bean，我使用注解是实现了UserServiceImpl AfterLog Log三个Bean的注册，就不在xml中写了-->

    <!--配置AOP 之前要导入aop约束 以下非常重要-->
    <aop:config>
        <!--切入点 要实现/增强 AOP功能的类，被代理的类-->
        <aop:pointcut id="pointcut" expression="execution(* com.yangsen.aop1.UserServiceImpl.*(..))"/>
        <!--执行环绕增强-->
        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
    </aop:config>

    <!--自定义切面实现AOP-->
    <aop:config>
        <!--自定义切面-->
        <aop:aspect ref="diyPointCut">
            <!--切入点-->
            <aop:pointcut id="pointcut2" expression="execution(* com.yangsen.aop1.UserServiceImpl.*(..))"/>
            <!--通知-->
            <aop:before method="before" pointcut-ref="pointcut2"/>
            <aop:after method="after" pointcut-ref="pointcut2"/>
        </aop:aspect>
    </aop:config>

    <!--方式三 注解方式实现AOP 需要开启autoproxy proxy-target-class="false"表示采用反射实现动态代理，
            proxy-target-class="true"表示使用cglib实现动态代理-->
    <aop:aspectj-autoproxy proxy-target-class="false"/>
</beans>